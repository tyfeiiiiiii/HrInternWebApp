@model IEnumerable<HrInternWebApp.Models.Identity.ViewLeave>
@inject IHttpContextAccessor HttpContextAccessor

<div class="container-fluid" style="background-color: #0E3B31; height: 100vh;">
    <div class="row h-100">
        <div class="col-md-3 p-3" style="background-color: #1A3E37;">
            @await Html.PartialAsync("Sidebar")
        </div>

        <div class="col-md-9" style="background-color: white; padding: 20px;">
            <nav class="navbar navbar-light bg-light justify-content-between">
                <a class="navbar-brand">Leave Applications</a>
                @if (HttpContextAccessor.HttpContext.Session.GetString("Role") == "Admin")
                {
                    <form class="form-inline d-flex" id="searchForm" method="get" action="javascript:void(0)">
                        <input class="form-control mr-2" type="search" id="empIdInput" name="empId" placeholder="Search by Employee ID" aria-label="Search">
                        <button class="btn btn-outline-success" type="submit">Search</button>
                    </form>
                }
            </nav>

            @if (TempData["ErrorMessage"] != null)
            {
                <div class="alert alert-danger mt-3">
                    @TempData["ErrorMessage"]
                </div>
            }

            <table class="table table-bordered">
                <thead>
                    <tr>
                        <th>Leave ID</th>
                        <th>Employee ID</th>
                        <th>Username</th>
                        <th>Leave Type</th>
                        <th>Start Date</th>
                        <th>End Date</th>
                        <th>Reason</th>
                        <th>Status</th>
                        <th>Approver</th>
                        @if (HttpContextAccessor.HttpContext.Session.GetString("Role") == "Admin")
                        {
                            <th>Action</th>
                        }
                    </tr>
                </thead>
                <tbody id="leaveTableBody">
                    @foreach (var leave in Model)
                    {
                        <tr>
                            <td>@leave.leaveId</td>
                            <td>@leave.empId</td>
                            <td>@leave.username</td>
                            <td>@leave.leaveType</td>
                            <td>@leave.startDate?.ToString("dd/MM/yyyy")</td>
                            <td>@leave.endDate?.ToString("dd/MM/yyyy")</td>
                            <td>@leave.reason</td>
                            <td>@(string.IsNullOrEmpty(leave.status) ? "Pending" : leave.status)</td>
                            <td>@(string.IsNullOrEmpty(leave.approver) ? "N/A" : leave.approver)</td>

                            @if (HttpContextAccessor.HttpContext.Session.GetString("Role") == "Admin")
                            {
                                <td>
                                    <form asp-action="UpdateLeaveStatus" method="post">
                                        <input type="hidden" name="leaveId" value="@leave.leaveId" />
                                        <select name="status" class="form-select">
                                            @if (leave.status == "Approved")
                                            {
                                                <option value="Approved" selected>Approved</option>
                                            }
                                            else
                                            {
                                                <option value="Approved">Approved</option>
                                            }

                                            @if (leave.status == "Rejected")
                                            {
                                                <option value="Rejected" selected>Rejected</option>
                                            }
                                            else
                                            {
                                                <option value="Rejected">Rejected</option>
                                            }

                                            @if (leave.status == "Pending" || string.IsNullOrEmpty(leave.status))
                                            {
                                                <option value="Pending" selected>Pending</option>
                                            }
                                            else
                                            {
                                                <option value="Pending">Pending</option>
                                            }
                                        </select>


                                        <button type="submit" class="btn btn-primary mt-2">Update Status</button>
                                    </form>
                                </td>
                            }
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

<script>
    // Prevent the default form submission and trigger AJAX instead
    $("#searchForm").on("submit", function (e) {
        e.preventDefault(); // Prevent the form from submitting normally
        
        var empId = $("#empIdInput").val(); // Get the empId from the input field

        $.ajax({
            url: '@Url.Action("SearchLeave", "Leave")',
            type: 'GET',
            data: { empId: empId }, 
            success: function (data) {
                var tableBody = $('#leaveTableBody');
                tableBody.empty(); // Clear the existing table rows

                $.each(data, function (index, leave) {
                    var row = '<tr>' +
                        '<td>' + leave.leaveId + '</td>' +
                        '<td>' + leave.empId + '</td>' +
                        '<td>' + leave.username + '</td>' +
                        '<td>' + leave.leaveType + '</td>' +
                        '<td>' + new Date(leave.startDate).toLocaleDateString() + '</td>' +
                        '<td>' + new Date(leave.endDate).toLocaleDateString() + '</td>' +
                        '<td>' + leave.reason + '</td>' +
                        '<td>' + (leave.status || 'Pending') + '</td>' +
                        '<td>' + (leave.approver || 'N/A') + '</td>';

                    // Only show action buttons if the user is an admin
                    if ('@HttpContextAccessor.HttpContext.Session.GetString("Role")' === "Admin") {
                        row += '<td>' +
                            '<form method="post" action="/Leave/UpdateLeaveStatus">' +
                            '<input type="hidden" name="leaveId" value="' + leave.leaveId + '" />' +
                            '<select name="status" class="form-select">' +
                            '<option value="Approved"' + (leave.status === "Approved" ? " selected" : "") + '>Approved</option>' +
                            '<option value="Rejected"' + (leave.status === "Rejected" ? " selected" : "") + '>Rejected</option>' +
                            '<option value="Pending"' + (leave.status === "Pending" ? " selected" : "") + '>Pending</option>' +
                            '</select>' +
                            '<button type="submit" class="btn btn-primary mt-2">Update Status</button>' +
                            '</form>' +
                            '</td>';
                    }

                    row += '</tr>';
                    tableBody.append(row);
                });
            },
            error: function (xhr, status, error) {
                console.log("Error:", error); // Log the error message
                alert('Error fetching search results.');
            }
        });
    });
</script>
